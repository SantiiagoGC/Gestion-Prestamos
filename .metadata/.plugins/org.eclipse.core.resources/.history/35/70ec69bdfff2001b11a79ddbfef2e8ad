package co.edu.uniquindio.gestionPrestamos.model;
/*
 * Clase empresa
 * @author Mauricio y Johan
 */
import java.util.ArrayList;

import co.edu.uniquindio.gestionPrestamos.Aplicacion;

public class Company {

    private String nombre;
    private ArrayList<Employee> empleado = new ArrayList<>();
    private ArrayList<Customer> cliente = new ArrayList<>();
    private ArrayList<Product> objeto = new ArrayList<>();
    private ArrayList<Loan> prestamo = new ArrayList<>();
    /*
     * Constructor
     * @param nombre
     */
    public Company(String nombre) {
        super();
        this.nombre = nombre;
        startData();
    }
	//Setters y Getters-------------------------------------------------------------------------------------
    public String getNombre() {
        return nombre;
    }
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }
    public ArrayList<Employee> getEmpleado() {
        return empleado;
    }
    public void setEmpleado(ArrayList<Employee> empleado) {
        this.empleado = empleado;
    }
    public ArrayList<Customer> getCliente() {
        return cliente;
    }
    public void setCliente(ArrayList<Customer> cliente) {
        this.cliente = cliente;
    }
    public ArrayList<Product> getObjeto() {
        return objeto;
    }
    public void setObjeto(ArrayList<Product> objeto) {
        this.objeto = objeto;
    }
    public ArrayList<Loan> getPrestamo() {
        return prestamo;
    }
    public void setPrestamo(ArrayList<Loan> prestamo) {
        this.prestamo = prestamo;
    }
    @Override
    public String toString() {
        return "Empresa [nombre=" + nombre + ", empleado=" + empleado + ", cliente=" + cliente + ", objeto=" + objeto
                + ", prestamo=" + prestamo + "]";
    }
    private void startData() {
		Customer customer = new Customer("102598", "Irelia", "Xan", "3135874578", "Cll 13", "Jonia", "No aplica", "Jonia", "irelia@gmail.com", DocumentType.ID_CITIZEN, "No aplica");
		getCliente().add(customer);

		customer = new Customer("1874", "Anna", "Lopez Gomez", "3215478524", "Cll 167", "Armenia", "Quindio", "Colombia", "Anna@gmail.com", DocumentType.ID_CITIZEN, "Estudiante");
		getCliente().add(customer);
		Product product = new Product("258749", "100 años de soleda", "Negro", "2.5 kilogramos", "20000", "20000", ConditionProduct.DISPONIBLE, "Libro", "Libro negro escrito por Gabriel");
		getObjeto().add(product);
		Employee employee = new Employee("1684", "Luis", "Salazar Gomez", "3254589875", "Crr 21", "Armenia", "numero 21", "Colombia", "Luis@gmail.com", DocumentType.ID_CITIZEN, TypeEmployee.PRESTADOR);
		getEmpleado().add(employee);
	}
    //Verifica el documento no este repetido.
	public boolean verfyIdentificationCustomer(String documentoCustomer) {
		Customer clientAux = null;
		for(int  i = 0; i < cliente.size(); i++) {
			clientAux = cliente.get(i);
			if (clientAux.getDocumento().equals(documentoCustomer)) {
				return true;
			}
		}
		return false;
	}
	//Verifica el códig del cliente
	public boolean verifyCodeProduct(String productCode) {
		Product objetoAux = null;
		for(int  i = 0; i < objeto.size(); i++) {
			objetoAux = objeto.get(i);
			if (objetoAux.getCodigo().equals(productCode)) {
				return true;
			}
		}
		return false;
	}
	public Customer registerClient(String nameCustomer, String lastNameCustomer, String customerIdentification,
		String customerAddress, String cellPhoneClient, String clientCity, String customerDepartment,
		String clientCountry, String emailCustomer, String profesioCustomer) {
		Customer client = new Customer(customerIdentification, nameCustomer, lastNameCustomer, cellPhoneClient, customerAddress, clientCity, customerDepartment, clientCountry, emailCustomer, DocumentType.ID_CITIZEN, profesioCustomer);
		client.setNombre(nameCustomer);
		client.setApellidos(lastNameCustomer);
		client.setDocumento(customerIdentification);
		client.setDireccion(customerAddress);
		client.setCelular(cellPhoneClient);
		client.setCiudadResidencia(clientCity);
		client.setDepartamento(customerDepartment);
		client.setCiudadResidencia(clientCountry);
		client.setMail(emailCustomer);
		client.setProfesion(profesioCustomer);
		return client;
	}
	public Product registerProduct(String nameProduct, String productCode, String productWeight,
			String conditionProduct, String productValue, String productDescription, String productColor,
			String totalValue) {

		Product product = new Product(productCode, nameProduct, productColor, productWeight, productValue, totalValue, null, "", productDescription);
		product.setNombre(nameProduct);
		product.setCodigo(productCode);
		product.setPeso(productWeight);
		product.setEstadoObjeto(null);
		product.setValorUnitario(productValue);
		product.setDescripcion(productDescription);
		product.setColor(productColor);
		product.setValorTotal(totalValue);
		return product;
	}


}
